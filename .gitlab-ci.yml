stages:
  - test
  - publish

variables: # TODO(template) update these if you have go submodules
  MAJOR_VERSION: "0"
  MINOR_VERSION: "0"
  TAG_PREFIX: ""

test_and_lint:
  stage: test
  image: golang:1.16
  cache:
    paths:
      - .cache/
  before_script:
    - go env -w "GOPRIVATE=${CI_SERVER_HOST}"
    - echo -e "machine ${CI_SERVER_HOST} login gitlab-ci-token password ${CI_JOB_TOKEN}" > ~/.netrc
  script:
    # set $GOPATH into current directory so we can cache it between runs
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"
    - export PATH=$PATH:$GOPATH/bin
    # run unit tests and linters
    - make ci
    # generate code navigation artifact for gitlab.com
    - make lsif
  coverage: '/^total:\t+\(statements\)\t+(\d+\.\d+)%/'
  artifacts:
    reports:
      lsif: dump.lsif
  only:
    - master
    - merge_requests
    - tags

tag_semver:
  stage: publish
  needs: [test_and_lint]
  # TODO we should find an image that just has the script's requirements (git, curl, jq) installed
  image: ubuntu:20.04
  script:
    - apt update
    - apt install -y git curl jq
    # TODO(template) update the arguments if you have go submodules (see variables)
    - ./scripts/tag_semver.sh $CI_JOB_TOKEN $CI_COMMIT_SHA $CI_PROJECT_ID $MAJOR_VERSION $MINOR_VERSION "$TAG_PREFIX"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
